{"ast":null,"code":"var _jsxFileName = \"/Users/james.hsu/Documents/GitHub/FindCommerceJS/src/imageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageModal = _ref => {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => setShow(true),\n      src: imageUrl,\n      alt: \"click to open modal\",\n      style: {\n        cursor: \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Image Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is a modal that appears when you click on the image. You can add any additional content or styling you need here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShow(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ImageModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","Modal","Button","ImageModal","imageUrl","show","setShow","cursor"],"sources":["/Users/james.hsu/Documents/GitHub/FindCommerceJS/src/imageModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ImageModal = ({ imageUrl }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <img\n        onClick={() => setShow(true)}\n        src={imageUrl}\n        alt=\"click to open modal\"\n        style={{ cursor: \"pointer\" }}\n      />\n      <Modal show={show} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Image Modal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <img src={imageUrl} alt=\"modal\" />\n          <p>\n            This is a modal that appears when you click on the image. You can\n            add any additional content or styling you need here.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAAC;AAAA;AAEhD,MAAMC,UAAU,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEvC,oBACE;IAAA,wBACE;MACE,OAAO,EAAE,MAAMM,OAAO,CAAC,IAAI,CAAE;MAC7B,GAAG,EAAEF,QAAS;MACd,GAAG,EAAC,qBAAqB;MACzB,KAAK,EAAE;QAAEG,MAAM,EAAE;MAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF,QAAC,KAAK;MAAC,IAAI,EAAEF,IAAK;MAAC,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAK,CAAE;MAAA,wBAC9C,QAAC,KAAK,CAAC,MAAM;QAAC,WAAW;QAAA,uBACvB,QAAC,KAAK,CAAC,KAAK;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAAc;QAAA;QAAA;QAAA;MAAA,QACzB,eACf,QAAC,KAAK,CAAC,IAAI;QAAA,wBACT;UAAK,GAAG,EAAEF,QAAS;UAAC,GAAG,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eAClC;UAAA,UAAG;QAGH;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACO,eACb,QAAC,KAAK,CAAC,MAAM;QAAA,uBACX,QAAC,MAAM;UAAC,OAAO,EAAC,WAAW;UAAC,OAAO,EAAE,MAAME,OAAO,CAAC,KAAK,CAAE;UAAA,UAAC;QAE3D;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBACP;AAEP,CAAC;AAAC,GA9BIH,UAAU;AAAA,KAAVA,UAAU;AAgChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}